// Import if Google Fonts URL is defined

@if variable-exists(font-url-google) {
  @import url($font-url-google);
}

// Mixins

@mixin bg-colors($map) {
  @each $theme, $color in $map {
    &--#{$theme} {
      background-color: $color;
      // Include border radius for all bg colored showcase elements (grid & buttons)
      @include border-radius;
      @content;
    }
  }
}

@mixin border-radius($value: $default-radius) {
  border-radius: $value;
}

@mixin center-element {
  margin-left: auto;
  margin-right: auto;
}

// CSS Grid
@mixin grid {
  display: grid;
  grid-row-gap: 10px;

  @for $i from 1 through $grid-columns {
    .grid__col--#{$i} {
      grid-column: span #{$i}; // Grid columns
      padding-top: 12px;
      padding-bottom: 12px;
    }
  }
}

@mixin columns($column-count) {
  @if $column-count == 'small' {
    grid-template-columns: (1fr);;
  }
  @else if $column-count == 'large' {
    grid-template-columns: repeat(12, 1fr);
  }
}

// Flexbox

@mixin flexbox {
  display: flex;
}

@mixin flex-direction($direction) {
  @if $direction == 'column' {
    flex-direction: column;
  }
  @else if $direction == 'row' {
    flex-direction: row;
  }
}

// Media queries

@mixin media-query($breakpoint) {

  // Conditional, so we can address breakpoints with strings as argument
  @if $breakpoint == 'medium' {
    @media (min-width: $breakpoint-medium) {
      @content;
    }
  }
  @else if $breakpoint == 'large' {
    @media (min-width: $breakpoint-large) {
      @content;
    }
  }
}